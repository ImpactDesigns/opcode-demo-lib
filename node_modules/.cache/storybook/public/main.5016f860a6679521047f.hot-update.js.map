{"version":3,"file":"main.5016f860a6679521047f.hot-update.js","sources":["webpack:///./src/components/Input/Input.js"],"sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport errorCircle from '../../assets/icons/checkmark.svg'\nimport { \n    black,\n    red,\n    blue,\n    green,\n    white\n}  from '../../colors'\nimport '../../assets/styles.css'\n\nconst InputContainer = styled.div`\n    position:relative;\n    // border: 1px solid red;\n`\n\nconst Label = styled.label`\n    margin-bottom: 8px;\n    color: ${black.base};\n\n    & > span {\n        margin-left: 2px;\n        color: ${red.base};\n    }\n`\n\nconst StyledInput = styled.input`\n    width: 100%;\n    color: ${black.base};\n    background: ${white.light};\n    border: 2px solid ${black.light};\n\n    &:not(:placeholder-shown) {\n        font-weight: 400;\n        border-color: ${black.base};\n    }\n\n    &:placeholder-shown {\n        border-color: ${black.light}\n    }\n\n    &:hover {\n        border-color: ${blue.light};\n    }\n\n    &:focus {\n        border-color: ${blue.dark};\n        outline: none;\n    }\n`\n\nconst HelperTextWrapper = styled.div`\n    box-sizing: border-box;\n    position:relative;\n    margin: 4px 0px 0px 0px;\n    display: flex;\n    align-items: center;\n    visibility: hidden;\n    // border: 1px dashed green;\n`\n\nconst HelperText = styled.p`\n    color: ${green.base};\n`\n\nconst HelperTextIcon = styled.img`\n    box-sizing: border-box;\n    position:relative;\n    margin: 0px 2px 0px 0px;\n    height: 12px;\n    display: inline;\n`\n\nexport default function Input(props) {\n    const [inputValue, setInputValue] = useState(null)\n\n    const {\n        type,\n        label,\n        id,\n        classname,\n        name,\n        placeholder,\n        disabled,\n        required,\n        blur\n    } = props\n\n    function handleInputChange(e) {\n        const { value } = e.target\n        setInputValue(() => value)\n    }\n\n    return (\n        <InputContainer>\n             {required ? <Label>{label}<span>*</span></Label> : <Label>{`${label}`}</Label>}\n            <StyledInput \n                type={type}\n                id={id}\n                className={classname}\n                name={name}\n                placeholder={placeholder} \n                disabled={disabled}\n                required={required}\n                onChange={(e) => handleInputChange(e)}\n                onBlur={() => blur(inputValue)}\n            />\n            <HelperTextWrapper>\n                <HelperTextIcon src={errorCircle} alt={'invalid text icon'} />\n                <HelperText>Helper text</HelperText>\n            </HelperTextWrapper>\n        </InputContainer>\n    )\n}\n\nInput.propTypes = {\n    type: PropTypes.oneOf([\n        'text',\n        'email'\n    ]).isRequired,\n    label: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    className: PropTypes.string,\n    name: PropTypes.string,\n    placeholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    required: PropTypes.bool.isRequired,\n    blur: PropTypes.func\n}\n\nInput.defaultProps = {\n    type: 'text',\n    label: 'Label',\n    required: false\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAOA;;;AAEA;AAKA;AAUA;AAyBA;AAUA;AAIA;AAQA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AATA;AAWA;AACA;AAAA;AAAA;AACA;AAAA;AAFA;AAbA;AAmBA;AAxCA;AA0CA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}